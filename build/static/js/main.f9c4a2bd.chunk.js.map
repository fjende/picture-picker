{"version":3,"sources":["App.tsx","Store.tsx","Actions.ts","HomePage.tsx","index.tsx"],"names":["App","props","Fragment","children","initialState","pictures","seenPictures","Store","React","createContext","reducer","state","action","type","payload","StoreProvider","useReducer","dispatch","Provider","value","fetchData","a","fetch","data","json","dataJSON","toggleSeen","picture","pictureInSeen","includes","dispatchObj","seenWithoutPicture","filter","seen","id","console","log","hidePicture","epi","EpisodesList","lazy","HomePage","useContext","useEffect","length","store","Suspense","fallback","className","RouterPage","pageComponent","ReactDOM","render","path","document","getElementById"],"mappings":"iOAWeA,MATf,SAAaC,GAEX,OACE,kBAAC,IAAMC,SAAP,KACGD,EAAME,W,uBCHPC,EAAuB,CACzBC,SAAU,GACVC,aAAc,IAGLC,EAAQC,IAAMC,cAA4BL,GAEvD,SAASM,EAAQC,EAAeC,GAC5B,OAAQA,EAAOC,MACX,IAAK,aACD,OAAO,2BAAKF,GAAZ,IAAmBN,SAAUO,EAAOE,UACxC,IAAK,WACD,OAAO,2BAAKH,GAAZ,IAAmBL,aAAa,GAAD,mBAAMK,EAAML,cAAZ,CAA0BM,EAAOE,YACpE,IAAK,cACD,OAAO,2BAAKH,GAAZ,IAAmBL,aAAcM,EAAOE,UAC5C,IAAK,OACD,OAAO,2BAAKH,GAAZ,IAAmBN,SAAUO,EAAOE,UACxC,QACI,OAAOH,GAIZ,SAASI,EAAT,GAAiF,IAAxDZ,EAAuD,EAAvDA,SAAuD,EACzDK,IAAMQ,WAAWN,EAASN,GAD+B,mBAC5EO,EAD4E,KACrEM,EADqE,KAEnF,OAAO,kBAACV,EAAMW,SAAP,CAAgBC,MAAO,CAAER,QAAOM,aAAad,G,oCCzB3CiB,EAAS,uCAAG,WAAOH,GAAP,iBAAAI,EAAA,4DACT,yEADS,SAEFC,MADP,0EADS,cAEfC,EAFe,gBAGEA,EAAKC,OAHP,cAGfC,EAHe,yBAIdR,EAAS,CACZJ,KAAM,aACNC,QAASW,EAASF,QAND,2CAAH,sDAUTG,EAAa,SAACf,EAAeM,EAAeU,GAErD,IAAMC,EAAgBjB,EAAML,aAAauB,SAASF,GAE9CG,EAAc,CACdjB,KAAM,WACNC,QAASa,GAGb,GAAIC,EAAe,CACf,IAAMG,EAAqBpB,EAAML,aAAa0B,QAAO,SAACC,GAAD,OAAoBA,EAAKC,KAAOP,EAAQO,MAC7FC,QAAQC,IAAIL,GACZD,EAAc,CACVjB,KAAM,cACNC,QAASiB,GAIjB,OAAOd,EAASa,IAIPO,EAAc,SAAC1B,EAAeM,EAAeU,GAStD,OAAOV,EALW,CACdJ,KAAM,OACNC,QAJ2BH,EAAMN,SAAS2B,QAAO,SAACM,GAAD,OAAmBA,EAAIJ,KAAOP,EAAQO,SC/BzFK,EAAe/B,IAAMgC,MAAU,kBAAM,gCAE5B,SAASC,IAAY,IAAD,EAEHjC,IAAMkC,WAAWnC,GAArCI,EAFuB,EAEvBA,MAAOM,EAFgB,EAEhBA,SAEfT,IAAMmC,WAAU,WACc,IAA1BhC,EAAMN,SAASuC,QAAgBxB,EAAUH,MAG7C,IAAMhB,EAAuB,CACzBI,SAAUM,EAAMN,SAChBwC,MAAO,CAAElC,QAAOM,YAChBS,aACAW,cACA/B,aAAcK,EAAML,cAGxB,OACI,kBAAC,IAAMJ,SAAP,KACI,kBAAC,IAAM4C,SAAP,CAAgBC,SAAU,4CACtB,6BAASC,UAAU,kBACd,kBAACT,EAAiBtC,MCnBvC,IAAMgD,EAAa,SAAChD,GAAD,OAAiEA,EAAMiD,eAE1FC,IAASC,OACP,kBAACrC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAKsC,KAAK,KACR,kBAACJ,EAAD,CAAYC,cAAe,kBAACT,EAAD,MAAcY,KAAK,SAIpDC,SAASC,eAAe,W","file":"static/js/main.f9c4a2bd.chunk.js","sourcesContent":["import React from 'react';\n\nfunction App(props: any) {\n\n  return (\n    <React.Fragment>\n      {props.children}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react'\r\nimport { IAction, IState } from './interfaces';\r\n\r\nconst initialState: IState = {\r\n    pictures: [],\r\n    seenPictures: []\r\n}\r\n\r\nexport const Store = React.createContext<IState | any>(initialState)\r\n\r\nfunction reducer(state: IState, action: IAction): IState {\r\n    switch (action.type) {\r\n        case 'FETCH_DATA':\r\n            return { ...state, pictures: action.payload }\r\n        case 'ADD_SEEN':\r\n            return { ...state, seenPictures: [...state.seenPictures, action.payload] }\r\n        case 'REMOVE_SEEN':\r\n            return { ...state, seenPictures: action.payload }\r\n        case 'HIDE':\r\n            return { ...state, pictures: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport function StoreProvider({ children }: JSX.ElementChildrenAttribute): JSX.Element {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState)\r\n    return <Store.Provider value={{ state, dispatch }}>{children}</Store.Provider>\r\n}","import { IAction, IPicture, IState } from './interfaces';\r\n\r\nexport const fetchData = async (dispatch: any) => {\r\n    const URL = 'https://api-dev.insidetrak.interactive1.com/homepage/get-latest-images'\r\n    const data = await fetch(URL)\r\n    const dataJSON = await data.json();\r\n    return dispatch({\r\n        type: 'FETCH_DATA',\r\n        payload: dataJSON.data\r\n    })\r\n}\r\n\r\nexport const toggleSeen = (state: IState, dispatch: any, picture: IPicture | any): IAction => {\r\n\r\n    const pictureInSeen = state.seenPictures.includes(picture)\r\n\r\n    let dispatchObj = {\r\n        type: 'ADD_SEEN',\r\n        payload: picture\r\n    }\r\n\r\n    if (pictureInSeen) {\r\n        const seenWithoutPicture = state.seenPictures.filter((seen: IPicture) => seen.id !== picture.id)\r\n        console.log(seenWithoutPicture)\r\n        dispatchObj = {\r\n            type: 'REMOVE_SEEN',\r\n            payload: seenWithoutPicture\r\n        }\r\n    }\r\n\r\n    return dispatch(dispatchObj)\r\n\r\n}\r\n\r\nexport const hidePicture = (state: IState, dispatch: any, picture: IPicture | any): IAction => {\r\n\r\n    const picturesWithoutPicture = state.pictures.filter((epi: IPicture) => epi.id !== picture.id)\r\n\r\n    let dispatchObj = {\r\n        type: 'HIDE',\r\n        payload: picturesWithoutPicture\r\n    }\r\n\r\n    return dispatch(dispatchObj)\r\n\r\n}","import React from 'react'\r\nimport { Store } from './Store';\r\nimport { IPictureProps } from './interfaces';\r\nimport { fetchData, toggleSeen, hidePicture } from './Actions';\r\n\r\nconst EpisodesList = React.lazy<any>(() => import('./PictureList'))\r\n\r\nexport default function HomePage() {\r\n\r\n    const { state, dispatch } = React.useContext(Store)\r\n\r\n    React.useEffect(() => {\r\n        state.pictures.length === 0 && fetchData(dispatch)\r\n    })\r\n\r\n    const props: IPictureProps = {\r\n        pictures: state.pictures,\r\n        store: { state, dispatch },\r\n        toggleSeen,\r\n        hidePicture,\r\n        seenPictures: state.seenPictures\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <React.Suspense fallback={<div>loading...</div>}>\r\n                <section className=\"picture-layout\">\r\n                    {<EpisodesList {...props} />}\r\n                </section>\r\n            </React.Suspense>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { StoreProvider } from './Store'\nimport { Router, RouteComponentProps } from '@reach/router'\nimport HomePage from './HomePage'\n\nconst RouterPage = (props: { pageComponent: JSX.Element } & RouteComponentProps) => props.pageComponent\n\nReactDOM.render(\n  <StoreProvider>\n    <Router>\n      <App path='/'>\n        <RouterPage pageComponent={<HomePage />} path='/' />\n      </App>\n    </Router>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}